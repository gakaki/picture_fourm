version: '3.8'

services:
  # MongoDB 数据库
  mongodb:
    image: mongo:${MONGO_VERSION:-8.0}
    container_name: forum-mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-root123456}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-forum_db}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - forum-network
    command: mongod --auth --bind_ip_all

  # Redis 缓存数据库
  redis:
    image: redis:7-alpine
    container_name: forum-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf:ro
    networks:
      - forum-network
    command: redis-server /etc/redis/redis.conf
    sysctls:
      net.core.somaxconn: 1024

  # MinIO 对象存储（本地OSS替代）
  minio:
    image: minio/minio:latest
    container_name: forum-minio
    restart: unless-stopped
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    networks:
      - forum-network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Jaeger 链路追踪 (可选)
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: forum-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14268:14268"  # HTTP collector
    environment:
      COLLECTOR_OTLP_ENABLED: true
    networks:
      - forum-network
    profiles:
      - monitoring

  # Prometheus 监控 (可选)
  prometheus:
    image: prom/prometheus:latest
    container_name: forum-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    networks:
      - forum-network
    profiles:
      - monitoring
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'

  # Grafana 可视化 (可选)
  grafana:
    image: grafana/grafana:latest
    container_name: forum-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_ADMIN_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./docker/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    networks:
      - forum-network
    profiles:
      - monitoring

  # Elasticsearch (全文搜索，可选)
  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: forum-elasticsearch
    restart: unless-stopped
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - forum-network
    profiles:
      - search
    ulimits:
      memlock:
        soft: -1
        hard: -1

  # RabbitMQ 消息队列 (可选)
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: forum-rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-admin}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-admin123}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - forum-network
    profiles:
      - messaging

# 数据卷
volumes:
  mongodb_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_VOLUME_DIRECTORY:-./data}/mongodb
  mongodb_config:
    driver: local
  redis_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_VOLUME_DIRECTORY:-./data}/redis
  minio_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${DOCKER_VOLUME_DIRECTORY:-./data}/minio
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local
  rabbitmq_data:
    driver: local

# 网络
networks:
  forum-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16